/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.cervejaria;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */



public class Estoque extends javax.swing.JDialog {
     
    private ArrayList<MiniESTOQUE> miniEstoqueArraylist = new ArrayList<MiniESTOQUE> ();
     
    
    
    public Estoque(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /* private void salvarArquivo() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                String conteudo = outputTextArea.getText();
                ArquivoUtils.salvarArquivo(fileChooser.getSelectedFile(), conteudo);
                JOptionPane.showMessageDialog(null, "Arquivo salvo com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar o arquivo", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } */
    
    class MiniESTOQUE{
    private String name;
    private String quantidade;
    
      public MiniESTOQUE (String name, String quantidade){
          
          this.name = name;
          this.quantidade = quantidade;
      }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getQuantidade() {
        return quantidade;
    }

    public void setQuantidade(String quantidade) {
        this.quantidade = quantidade;
    }

      
}

    
    
    
    
    
    
    
    // private ArrayList<MiniESTOQUE> miniEstoqueArraylist = new ArrayList<MiniESTOQUE> ();
     
     private void addTextData(){
     
         caixaLeitura.setText ("OLA MUNDO");    
     
     }
     
     private void readFile (String fileName){
            String fileDataStr = "";
            int numItems = 0;
            
            miniEstoqueArraylist.clear();
            
            try{
                    FileReader fileReader = new FileReader(fileName);
                   System.out.println("teste");
                   System.out.println(fileName);
                    //Scanner inFile = new Scanner(new File(fileName));
                    Scanner inFile = new Scanner(fileReader);
                    System.out.println(inFile);
                    while (inFile.hasNext() == true)
                    {   
                         
                        fileDataStr = fileDataStr + 
                                inFile.nextLine() + "\n";
                        numItems++;
                    }
                    inFile.close();
                    fileReader.close();
                    
                    caixaLeitura.setText("");
                    for (int k = 0; k< miniEstoqueArraylist.size(); k++)
                    {
                       caixaLeitura.append(miniEstoqueArraylist.get(k).getName()
                       +    "\t" +miniEstoqueArraylist.get(k).getQuantidade()
                       + "\n");
                    }
                    
                    
                    caixaLeitura.append("\n\n" + numItems +   " Entradas no estoque." + "\n\n");
                     
                    caixaLeitura.setText(fileDataStr);
                    
                }  
            catch(IOException err)
                    {
                      caixaLeitura.setText("ERRO: problemas com o arquivo");      
                    }
                    
     
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Botaoadditem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        AbrirArquivo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        caixaLeitura = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Botaoadditem.setText("Adicionar Item");
        Botaoadditem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoadditemActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Estoque");

        AbrirArquivo.setText("AbrirArquivo");
        AbrirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirArquivoActionPerformed(evt);
            }
        });

        caixaLeitura.setColumns(20);
        caixaLeitura.setRows(5);
        jScrollPane3.setViewportView(caixaLeitura);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Botaoadditem, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(AbrirArquivo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))
                    .addComponent(jLabel1))
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Botaoadditem, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(AbrirArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
 
    private void AbrirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirArquivoActionPerformed
          
        readFile("C:\\Users\\Gabriel\\Documents\\NetBeansProjects\\Cervejaria\\src\\main\\java\\com\\mycompany\\cervejaria\\estoquefinal.txt");
        //readFile("teste.txt");
        /*JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(chooser);
            chooser.setVisible(true);
            
            File file = new File(chooser.getSelectedFile().toString());
        try {
            Scanner scanner = new Scanner(file);
            while(scanner.hasNextLine()){
            
                String data = scanner.nextLine();
                jTextArea1.insert(data, 0);
            
            }
            scanner.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Estoque.class.getName()).log(Level.SEVERE, null, ex);
        }
             
           
                
        */    
    }//GEN-LAST:event_AbrirArquivoActionPerformed
  
    private void BotaoadditemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoadditemActionPerformed
       
    }//GEN-LAST:event_BotaoadditemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Estoque dialog = new Estoque(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirArquivo;
    private javax.swing.JButton Botaoadditem;
    private javax.swing.JTextArea caixaLeitura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
